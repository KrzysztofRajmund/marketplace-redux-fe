{"ast":null,"code":"// import React, {Component, useState, useEffect} from 'react';\n// //reactstrap\n// import {Container,Carousel,CarouselItem,Button, Card, CardGroup, Row, Col} from 'react-bootstrap'\n// //router\n// import {Link, Redirect} from 'react-router-dom';\n// //redux\n// import PropTypes from 'prop-types';\n// import {connect} from 'react-redux';\n// import {getItems} from '../../actions/fetchActions';\n// import { addProductToBasket } from \"../../actions/basketActions\";\n// //assets\n// import promoCode from \"../../assets/promoCode.png\";\n// import basketicon from \"../navbar/assets/basketicon.png\";\n// import verticalCard1 from \"../../assets/verticalCard1.jpg\";\n// import verticalCard2 from \"../../assets/verticalCard2.jpg\";\n// import verticalCard3 from \"../../assets/verticalCard3.jpg\";\n// import infoIcon from \"../../assets/infoIcon.png\";\n// const ChosenPromotions = ({getItems, fetchReducer,addProductToBasket,basketReducer }) => {\n//     useEffect (()=>{\n//         getItems();\n//     },[])\n//     //Carousel\n//     const [index, setIndex] = useState(0);\n//     const [direction, setDirection] = useState(null);\n//     const handleSelect = (selectedIndex, e) => {\n//       setIndex(selectedIndex);\n//       setDirection(e.direction);\n//     };\n//     const addProduct = (product,basketReducer) => {\n//       addProductToBasket(product,basketReducer) \n//       };\n//     //Toggle useState\n//     const [togglePromotion, setTogglePromotion] = useState(true);\n//     const [toggleWeekendOffer, setToggleWeekendOffer] = useState(false);\n//     const [toggleWeekOffer, setToggleWeekOffer] = useState(false);\n//     //TogglePromotion\n//     const onClickTogglePromotion = async () => {\n//     await setTogglePromotion(true)\n//     await setToggleWeekendOffer(false)\n//     await setToggleWeekOffer(false)\n//    }\n//    //ToggleWeekendOffer\n//    const onClickToggleWeekendOffer = async () => {\n//     await setTogglePromotion(false)\n//     await setToggleWeekendOffer(true)\n//     await setToggleWeekOffer(false)\n//    }\n//     //ToggleWeekOffer\n//     const onClickToggleWeekOffer = async () => {\n//       await setTogglePromotion(false)\n//       await setToggleWeekendOffer(false)\n//       await setToggleWeekOffer(true)\n//      }\n//   // CONDITIONALS FOR TOGGLE !\n//   //items promo fetch\n// if (togglePromotion) {\n//     const itemsForYou = fetchReducer.slice(0,4).map(item=>(\n//      <Col className=\"col-6\">\n//       <Card key={item.id} className=\"chosenForYouRow\">\n//         <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\n//         <Card.Body>\n//     <Card.Title><div>{item.title.slice(0,15)}...</div><p>${item.price}</p></Card.Title>\n//         </Card.Body>\n//         <Card.Footer>\n//           <img\n//                         src={infoIcon}\n//                         alt=\"basket img\"\n//                         height=\"30px\"\n//                         width=\"30px\"\n//                       ></img>\n//         </Card.Footer>\n//       </Card>\n//       </Col>\n//     ));\n//     return (\n//       <>\n//       <hr/>\n//     <Row className=\"hideSetionMediaOne col-12\">\n//       <Col className=\"col-8\"></Col>\n//       <Col className=\"col-4\">\n//         <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>All Promotions</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Weekend</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Week</Button>\n//                 </Col>\n//       </Row>\n//       <Container className=\"col-12\">\n//       <Row className=\"col-4\">\n//             <Carousel\n//               activeIndex={index}\n//               direction={direction}\n//               onSelect={handleSelect}\n//             >\n//             </Carousel>\n//           </Row>\n//       <Row className=\"col-8\">\n//           <CardGroup>\n//           {itemsForYou}\n//           </CardGroup>\n//   </Row>\n//         </Container>\n//         </>\n//     )\n//   } \n// if (toggleWeekendOffer) {\n//   const itemsForYou = fetchReducer.slice(4,13).map(item=>(\n//    <Col className=\"col-4\">\n//     <Card key={item.id} className=\"chosenForYouRow\">\n//       <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\n//       <Card.Body>\n//   <Card.Title><div>{item.title.slice(0,16)}...</div><p>${item.price}</p></Card.Title>\n//       </Card.Body>\n//       <Card.Footer>\n//         <img\n//                       src={infoIcon}\n//                       alt=\"basket img\"\n//                       height=\"30px\"\n//                       width=\"30px\"\n//                     ></img>\n//       </Card.Footer>\n//     </Card>\n//     </Col>\n//   ));\n//   return (\n//     <>\n//     <hr/>\n//     <Row className=\"hideSetionMediaOne col-12\">\n//       <Col className=\"col-8\"></Col>\n//       <Col className=\"col-4\">\n//       <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\n//                 src={promoCode}\n//                 alt=\"img\"\n//                 height=\"30px\"\n//                 width=\"30px\"\n//               ></img>All Promotions</Button>\n//       <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\n//                 src={promoCode}\n//                 alt=\"img\"\n//                 height=\"30px\"\n//                 width=\"30px\"\n//               ></img>Weekend</Button>\n//       <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\n//                 src={promoCode}\n//                 alt=\"img\"\n//                 height=\"30px\"\n//                 width=\"30px\"\n//               ></img>Week</Button>\n//               </Col>\n//     </Row>\n//     <Container className=\"col-12\">\n//     <Row className=\"col-4\">\n//           <Carousel\n//             activeIndex={index}\n//             direction={direction}\n//             onSelect={handleSelect}\n//           >\n//           </Carousel>\n//         </Row>\n//     <Row className=\"col-8\">\n//         <CardGroup>\n//         {itemsForYou}\n//         </CardGroup>\n// </Row>\n//       </Container>\n//       </>\n//   )\n// } \n//   //items promo fetch\n//   if (toggleWeekOffer) {\n//     const itemsForYou = fetchReducer.slice(5,14).map(item=>(\n//      <Col className=\"col-4\">\n//       <Card key={item.id} className=\"chosenForYouRow\">\n//         <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\n//         <Card.Body>\n//     <Card.Title><div>{item.title.slice(0,15)}...</div><p>${item.price}</p></Card.Title>\n//         </Card.Body>\n//         <Card.Footer>\n//           <img\n//                         src={infoIcon}\n//                         alt=\"basket img\"\n//                         height=\"30px\"\n//                         width=\"30px\"\n//                       ></img>\n//         </Card.Footer>\n//       </Card>\n//       </Col>\n//     ));\n//     return (\n//       <>\n//       <hr/>\n//       <Row className=\"hideSetionMediaOne col-12\">\n//         <Col className=\"col-8\"></Col>\n//         <Col className=\"col-4\">\n//         <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>All Promotions</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Weekend</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Week</Button>\n//                 </Col>\n//       </Row>\n//       <Container className=\"col-12\">\n//       <Row className=\"col-4\">\n//             <Carousel\n//               activeIndex={index}\n//               direction={direction}\n//               onSelect={handleSelect}\n//             >\n//             </Carousel>\n//           </Row>\n//       <Row className=\"col-8\">\n//           <CardGroup>\n//           {itemsForYou}\n//           </CardGroup>\n//   </Row>\n//         </Container>\n//         </>\n//     )\n//   } \n//     return (\n//       <>\n//       <hr/>\n//       <div className=\"hideSetionMediaOne\">\n//       <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>All Promotions</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Weekend</Button>\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\n//                   src={promoCode}\n//                   alt=\"img\"\n//                   height=\"30px\"\n//                   width=\"30px\"\n//                 ></img>Week</Button>\n//       </div>\n//         </>\n//       );\n// }\n// ChosenPromotions.propTypes = {\n//     getItems: PropTypes.func.isRequired,\n//     fetchReducer: PropTypes.array.isRequired,\n//     addProductToBasket: PropTypes.func.isRequired,\n//     basketReducer: PropTypes.array.isRequired\n// }\n// const mapStateToProps = state => ({\n// fetchReducer: state.fetchReducer.items,\n// basketReducer: state.basketReducer.basketProducts\n// });\n// export default connect (mapStateToProps,{getItems,addProductToBasket})(ChosenPromotions);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/chosenPromotions.jsx"],"names":[],"mappingssourcesContent":["// import React, {Component, useState, useEffect} from 'react';\r\n// //reactstrap\r\n// import {Container,Carousel,CarouselItem,Button, Card, CardGroup, Row, Col} from 'react-bootstrap'\r\n// //router\r\n// import {Link, Redirect} from 'react-router-dom';\r\n// //redux\r\n// import PropTypes from 'prop-types';\r\n// import {connect} from 'react-redux';\r\n// import {getItems} from '../../actions/fetchActions';\r\n// import { addProductToBasket } from \"../../actions/basketActions\";\r\n// //assets\r\n// import promoCode from \"../../assets/promoCode.png\";\r\n// import basketicon from \"../navbar/assets/basketicon.png\";\r\n// import verticalCard1 from \"../../assets/verticalCard1.jpg\";\r\n// import verticalCard2 from \"../../assets/verticalCard2.jpg\";\r\n// import verticalCard3 from \"../../assets/verticalCard3.jpg\";\r\n// import infoIcon from \"../../assets/infoIcon.png\";\r\n\r\n\r\n\r\n\r\n\r\n// const ChosenPromotions = ({getItems, fetchReducer,addProductToBasket,basketReducer }) => {\r\n\r\n//     useEffect (()=>{\r\n//         getItems();\r\n//     },[])\r\n//     //Carousel\r\n//     const [index, setIndex] = useState(0);\r\n//     const [direction, setDirection] = useState(null);\r\n  \r\n//     const handleSelect = (selectedIndex, e) => {\r\n//       setIndex(selectedIndex);\r\n//       setDirection(e.direction);\r\n//     };\r\n\r\n//     const addProduct = (product,basketReducer) => {\r\n//       addProductToBasket(product,basketReducer) \r\n//       };\r\n    \r\n//     //Toggle useState\r\n//     const [togglePromotion, setTogglePromotion] = useState(true);\r\n//     const [toggleWeekendOffer, setToggleWeekendOffer] = useState(false);\r\n//     const [toggleWeekOffer, setToggleWeekOffer] = useState(false);\r\n \r\n\r\n//     //TogglePromotion\r\n//     const onClickTogglePromotion = async () => {\r\n//     await setTogglePromotion(true)\r\n//     await setToggleWeekendOffer(false)\r\n//     await setToggleWeekOffer(false)\r\n//    }\r\n\r\n//    //ToggleWeekendOffer\r\n//    const onClickToggleWeekendOffer = async () => {\r\n//     await setTogglePromotion(false)\r\n//     await setToggleWeekendOffer(true)\r\n//     await setToggleWeekOffer(false)\r\n//    }\r\n\r\n//     //ToggleWeekOffer\r\n//     const onClickToggleWeekOffer = async () => {\r\n//       await setTogglePromotion(false)\r\n//       await setToggleWeekendOffer(false)\r\n//       await setToggleWeekOffer(true)\r\n//      }\r\n\r\n//   // CONDITIONALS FOR TOGGLE !\r\n\r\n//   //items promo fetch\r\n// if (togglePromotion) {\r\n\r\n//     const itemsForYou = fetchReducer.slice(0,4).map(item=>(\r\n//      <Col className=\"col-6\">\r\n//       <Card key={item.id} className=\"chosenForYouRow\">\r\n//         <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\r\n//         <Card.Body>\r\n//     <Card.Title><div>{item.title.slice(0,15)}...</div><p>${item.price}</p></Card.Title>\r\n//         </Card.Body>\r\n//         <Card.Footer>\r\n//           <img\r\n//                         src={infoIcon}\r\n//                         alt=\"basket img\"\r\n//                         height=\"30px\"\r\n//                         width=\"30px\"\r\n//                       ></img>\r\n//         </Card.Footer>\r\n//       </Card>\r\n//       </Col>\r\n      \r\n//     ));\r\n//     return (\r\n//       <>\r\n//       <hr/>\r\n//     <Row className=\"hideSetionMediaOne col-12\">\r\n//       <Col className=\"col-8\"></Col>\r\n//       <Col className=\"col-4\">\r\n//         <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>All Promotions</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Weekend</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Week</Button>\r\n//                 </Col>\r\n//       </Row>\r\n//       <Container className=\"col-12\">\r\n//       <Row className=\"col-4\">\r\n//             <Carousel\r\n//               activeIndex={index}\r\n//               direction={direction}\r\n//               onSelect={handleSelect}\r\n//             >\r\n              \r\n//             </Carousel>\r\n//           </Row>\r\n//       <Row className=\"col-8\">\r\n//           <CardGroup>\r\n//           {itemsForYou}\r\n//           </CardGroup>\r\n//   </Row>\r\n//         </Container>\r\n//         </>\r\n//     )\r\n//   } \r\n\r\n  \r\n// if (toggleWeekendOffer) {\r\n\r\n//   const itemsForYou = fetchReducer.slice(4,13).map(item=>(\r\n//    <Col className=\"col-4\">\r\n//     <Card key={item.id} className=\"chosenForYouRow\">\r\n//       <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\r\n//       <Card.Body>\r\n//   <Card.Title><div>{item.title.slice(0,16)}...</div><p>${item.price}</p></Card.Title>\r\n//       </Card.Body>\r\n//       <Card.Footer>\r\n//         <img\r\n//                       src={infoIcon}\r\n//                       alt=\"basket img\"\r\n//                       height=\"30px\"\r\n//                       width=\"30px\"\r\n//                     ></img>\r\n//       </Card.Footer>\r\n//     </Card>\r\n//     </Col>\r\n    \r\n//   ));\r\n//   return (\r\n//     <>\r\n//     <hr/>\r\n//     <Row className=\"hideSetionMediaOne col-12\">\r\n//       <Col className=\"col-8\"></Col>\r\n//       <Col className=\"col-4\">\r\n//       <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\r\n//                 src={promoCode}\r\n//                 alt=\"img\"\r\n//                 height=\"30px\"\r\n//                 width=\"30px\"\r\n//               ></img>All Promotions</Button>\r\n//       <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\r\n//                 src={promoCode}\r\n//                 alt=\"img\"\r\n//                 height=\"30px\"\r\n//                 width=\"30px\"\r\n//               ></img>Weekend</Button>\r\n//       <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\r\n//                 src={promoCode}\r\n//                 alt=\"img\"\r\n//                 height=\"30px\"\r\n//                 width=\"30px\"\r\n//               ></img>Week</Button>\r\n//               </Col>\r\n//     </Row>\r\n//     <Container className=\"col-12\">\r\n//     <Row className=\"col-4\">\r\n//           <Carousel\r\n//             activeIndex={index}\r\n//             direction={direction}\r\n//             onSelect={handleSelect}\r\n//           >\r\n            \r\n//           </Carousel>\r\n//         </Row>\r\n//     <Row className=\"col-8\">\r\n//         <CardGroup>\r\n//         {itemsForYou}\r\n//         </CardGroup>\r\n// </Row>\r\n//       </Container>\r\n//       </>\r\n//   )\r\n// } \r\n\r\n//   //items promo fetch\r\n//   if (toggleWeekOffer) {\r\n\r\n//     const itemsForYou = fetchReducer.slice(5,14).map(item=>(\r\n//      <Col className=\"col-4\">\r\n//       <Card key={item.id} className=\"chosenForYouRow\">\r\n//         <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\r\n//         <Card.Body>\r\n//     <Card.Title><div>{item.title.slice(0,15)}...</div><p>${item.price}</p></Card.Title>\r\n//         </Card.Body>\r\n//         <Card.Footer>\r\n//           <img\r\n//                         src={infoIcon}\r\n//                         alt=\"basket img\"\r\n//                         height=\"30px\"\r\n//                         width=\"30px\"\r\n//                       ></img>\r\n//         </Card.Footer>\r\n//       </Card>\r\n//       </Col>\r\n      \r\n//     ));\r\n//     return (\r\n//       <>\r\n//       <hr/>\r\n//       <Row className=\"hideSetionMediaOne col-12\">\r\n//         <Col className=\"col-8\"></Col>\r\n//         <Col className=\"col-4\">\r\n//         <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>All Promotions</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Weekend</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Week</Button>\r\n//                 </Col>\r\n//       </Row>\r\n//       <Container className=\"col-12\">\r\n//       <Row className=\"col-4\">\r\n//             <Carousel\r\n//               activeIndex={index}\r\n//               direction={direction}\r\n//               onSelect={handleSelect}\r\n//             >\r\n              \r\n//             </Carousel>\r\n//           </Row>\r\n//       <Row className=\"col-8\">\r\n//           <CardGroup>\r\n//           {itemsForYou}\r\n//           </CardGroup>\r\n//   </Row>\r\n//         </Container>\r\n//         </>\r\n//     )\r\n//   } \r\n  \r\n//     return (\r\n//       <>\r\n//       <hr/>\r\n//       <div className=\"hideSetionMediaOne\">\r\n//       <Button className=\"transparentBtn\" onClick={onClickTogglePromotion}>  <img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>All Promotions</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekendOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Weekend</Button>\r\n//         <Button className=\"transparentBtn\" onClick={onClickToggleWeekOffer}><img id=\"promoCode\"\r\n//                   src={promoCode}\r\n//                   alt=\"img\"\r\n//                   height=\"30px\"\r\n//                   width=\"30px\"\r\n//                 ></img>Week</Button>\r\n//       </div>\r\n//         </>\r\n//       );\r\n// }\r\n\r\n\r\n// ChosenPromotions.propTypes = {\r\n//     getItems: PropTypes.func.isRequired,\r\n//     fetchReducer: PropTypes.array.isRequired,\r\n//     addProductToBasket: PropTypes.func.isRequired,\r\n//     basketReducer: PropTypes.array.isRequired\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n// fetchReducer: state.fetchReducer.items,\r\n// basketReducer: state.basketReducer.basketProducts\r\n// });\r\n\r\n// export default connect (mapStateToProps,{getItems,addProductToBasket})(ChosenPromotions);\r\n"]},"metadata":{},"sourceType":"module"}
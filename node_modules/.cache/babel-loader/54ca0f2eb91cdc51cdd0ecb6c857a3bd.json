{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\thumbnailCarousel.jsx\";\nimport React, { Component, useState, useEffect } from 'react'; //react-bootstrap\n\nimport { Container, Carousel, Button, Card, CardGroup, Modal, Row, Col } from 'react-bootstrap'; //redux\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems, getProductDetails } from '../../actions/fetchActions'; //router\n\nimport { Link } from 'react-router-dom'; //assets\n\nimport xButton from \"../../assets/xButton.png\";\n\nconst ThumbnailCarousel = ({\n  getItems,\n  getProductDetails,\n  fetchReducer,\n  selectedProduct\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []); //modal button\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    setShow(true);\n    getProductDetails(id);\n    console.log(\"id modal\", id);\n  }; // carousel useState\n\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        index = _useState4[0],\n        setIndex = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        direction = _useState6[0],\n        setDirection = _useState6[1];\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    setDirection(e.direction);\n  };\n\n  const productImages = fetchReducer.slice(0, 4).map(item => React.createElement(Card, {\n    key: item.id,\n    className: \"thumbnailCarouselRow\",\n    onClick: () => handleShow(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: item.verticalCardUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n  const productImagesTwo = fetchReducer.slice(5, 9).map(item => React.createElement(Card, {\n    key: item.id,\n    className: \"thumbnailCarouselRow\",\n    onClick: () => handleShow(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: item.verticalCardUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: show,\n    onHide: handleClose // size=\"xl\"\n    ,\n    className: \"modalProductDetails\",\n    backdropClassName: \"backdropModalProductPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: handleClose,\n    className: \"modalX\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: xButton,\n    width: \"20px\",\n    height: \"20px\",\n    alt: \"xButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Card.Img, {\n    className: \"d-block w-100\",\n    src: selectedProduct.verticalCardUrl,\n    height: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Container, {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    className: \"thumbnailCarousel\",\n    activeIndex: index,\n    interval: null,\n    indicators: false,\n    direction: direction,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CardGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, productImages))), React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(CardGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, productImagesTwo))))));\n};\n\nThumbnailCarousel.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  getProductDetails: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items,\n  selectedProduct: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  getProductDetails\n})(ThumbnailCarousel);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/thumbnailCarousel.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Card","CardGroup","Modal","Row","Col","PropTypes","connect","getItems","getProductDetails","Link","xButton","ThumbnailCarousel","fetchReducer","selectedProduct","show","setShow","handleClose","handleShow","id","console","log","index","setIndex","direction","setDirection","handleSelect","selectedIndex","e","productImages","slice","map","item","verticalCardUrl","productImagesTwo","propTypes","func","isRequired","array","mapStateToProps","state","items","productDetails"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\n//react-bootstrap\r\nimport {Container,Carousel,Button,Card,CardGroup, Modal, Row,Col} from 'react-bootstrap'\r\n//redux\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems, getProductDetails} from '../../actions/fetchActions';\r\n//router\r\nimport { Link } from 'react-router-dom';\r\n//assets\r\nimport xButton from \"../../assets/xButton.png\";\r\n\r\n\r\n\r\n\r\n\r\nconst ThumbnailCarousel = ({getItems,getProductDetails, fetchReducer,selectedProduct }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n\r\n    //modal button\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (id) => {\r\n          setShow(true)\r\n          getProductDetails(id);\r\n          console.log(\"id modal\",id)\r\n        \r\n    };\r\n    // carousel useState\r\n    const [index, setIndex] = useState(0);\r\n    const [direction, setDirection] = useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n   \r\n    const productImages = fetchReducer.slice(0,4).map(item=>(\r\n      <Card key={item.id} className=\"thumbnailCarouselRow\" onClick={()=>handleShow(item.id)}>\r\n      \r\n        <Card.Img variant=\"top\"src={item.verticalCardUrl}/>\r\n        \r\n      </Card>\r\n    ));\r\n    const productImagesTwo = fetchReducer.slice(5,9).map(item=>(\r\n      <Card key={item.id} \r\n      className=\"thumbnailCarouselRow\" \r\n      onClick={()=>handleShow(item.id)}>\r\n      \r\n        <Card.Img variant=\"top\"src={item.verticalCardUrl}/>\r\n        \r\n      </Card>\r\n    ));\r\n   \r\n    return (\r\n      <>\r\n      {/* modal */}\r\n      <Modal show={show} \r\n        onHide={handleClose}\r\n        // size=\"xl\"\r\n        className=\"modalProductDetails\"\r\n        backdropClassName=\"backdropModalProductPage\"\r\n        >     \r\n        <div onClick={handleClose} className=\"modalX\"><img src={xButton} width=\"20px\" height=\"20px\" alt=\"xButton\"/></div>\r\n              <Card.Img \r\n             className=\"d-block w-100\"\r\n             src={selectedProduct.verticalCardUrl}\r\n             height=\"auto\"\r\n             />\r\n            \r\n           \r\n           \r\n          </Modal>\r\n          {/* carousel */}\r\n          <Container className=\"col-12\" >\r\n        <Carousel \r\n        className=\"thumbnailCarousel\" \r\n        activeIndex={index}\r\n        interval={null}\r\n        indicators={false}\r\n         direction={direction} onSelect={handleSelect}>\r\n        \r\n          <Carousel.Item>\r\n          <Row className=\"col-12\">\r\n            <CardGroup>\r\n          {productImages}\r\n          </CardGroup>\r\n          </Row>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n          <Row className=\"col-12\">\r\n            <CardGroup>\r\n          {productImagesTwo}\r\n          </CardGroup>\r\n          </Row>\r\n          </Carousel.Item>\r\n         \r\n        </Carousel>\r\n        </Container>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\nThumbnailCarousel.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items,\r\nselectedProduct: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems, getProductDetails})(ThumbnailCarousel);\r\n"]},"metadata":{},"sourceType":"module"}
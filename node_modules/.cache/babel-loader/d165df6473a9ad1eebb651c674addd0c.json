{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\productDetails.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Jumbotron } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems, getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst ProductDetails = ({\n  getProductDetails,\n  fetchReducer,\n  match\n}) => {\n  useEffect(() => {\n    getProductDetails(match);\n    console.log(match, \"props\");\n  }, []);\n  const getProduct = fetchReducerProductDetails.map(item => React.createElement(Jumbotron, {\n    className: \"jumbotronSale\",\n    key: item.id,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.url,\n    alt: \"image\",\n    width: \"100%\",\n    height: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n  return React.createElement(React.Fragment, null, match.params.id, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, getProduct));\n};\n\nProductDetails.propTypes = {\n  getProductDetails: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducerProductDetails: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getProductDetails\n})(ProductDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/productDetails.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Jumbotron","PropTypes","connect","getItems","getProductDetails","Route","Switch","Link","ProductDetails","fetchReducer","match","console","log","getProduct","fetchReducerProductDetails","map","item","id","url","params","propTypes","func","isRequired","array","mapStateToProps","state","productDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAmD,iBAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAiBC,iBAAjB,QAAyC,4BAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,IAAvB,QAAmC,kBAAnC;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAACJ,EAAAA,iBAAD;AAAoBK,EAAAA,YAApB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AAEhEd,EAAAA,SAAS,CAAE,MAAI;AAEXQ,IAAAA,iBAAiB,CAACM,KAAD,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkB,OAAlB;AACH,GAJQ,EAIP,EAJO,CAAT;AAOA,QAAMG,UAAU,GAAGC,0BAA0B,CAACC,GAA3B,CAA+BC,IAAI,IACpD,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAqC,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA/C;AAAmD,IAAA,KAAK,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAA6C,IAAA,MAAM,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADiB,CAAnB;AAUA,SACE,0CACCR,KAAK,CAACS,MAAN,CAAaF,EADd,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,UAAN,CAFA,CADF;AAQH,CA3BD;;AA8BAL,cAAc,CAACY,SAAf,GAA2B;AACvBhB,EAAAA,iBAAiB,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADX;AAEvBb,EAAAA,YAAY,EAAER,SAAS,CAACsB,KAAV,CAAgBD;AAFP,CAA3B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCX,EAAAA,0BAA0B,EAAEW,KAAK,CAAChB,YAAN,CAAmBiB;AADb,CAAL,CAA7B;;AAIA,eAAexB,OAAO,CAAEsB,eAAF,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAA8CI,cAA9C,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Jumbotron} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems,getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProductDetails = ({getProductDetails, fetchReducer,match}) => {\r\n\r\n    useEffect (()=>{\r\n      \r\n        getProductDetails(match);\r\n        console.log(match,\"props\")\r\n    },[])\r\n\r\n\r\n    const getProduct = fetchReducerProductDetails.map(item=>(\r\n      <Jumbotron className=\"jumbotronSale\" key={item.id} fluid> \r\n           <img src={item.url} alt=\"image\" width=\"100%\" height=\"400px\"/>\r\n      </Jumbotron>\r\n  ));\r\n   \r\n\r\n    \r\n\r\n  \r\n    return (\r\n      <>\r\n      {match.params.id}\r\n      <div>{getProduct}</div>\r\n      \r\n     \r\n        </>\r\n      );\r\n}\r\n\r\n\r\nProductDetails.propTypes = {\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducerProductDetails: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getProductDetails})(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}
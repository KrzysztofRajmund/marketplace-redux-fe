{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\slideMain.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems, getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch } from 'react-router-dom';\n\nconst SlideMain = ({\n  getItems,\n  getProductDetails,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n    getProductDetails();\n  }, []);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        direction = _useState4[0],\n        setDirection = _useState4[1];\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    setDirection(e.direction);\n  };\n\n  const clickedProduct = id => {\n    React.createElement(Route, {\n      exact: true,\n      path: \"/\" + id,\n      component: productDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  };\n\n  const suggestedItems = fetchReducer.slice(0, 8).map(item => React.createElement(Carousel.Item, {\n    key: item.id,\n    onClick: clickedProduct(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: item.url,\n    alt: \"First slide\",\n    height: \"550px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Carousel.Caption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sale -70%\"), React.createElement(Button, {\n    className: \"slideMainBtn\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Primary\"))));\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"subtitleLargest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Suggested Products\", React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Carousel, {\n    activeIndex: index,\n    direction: direction,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, suggestedItems));\n};\n\nSlideMain.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  getProductDetails: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items,\n  fetchReducerProductDetails: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  getProductDetails\n})(SlideMain);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/slideMain.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","PropTypes","connect","getItems","getProductDetails","Route","Switch","SlideMain","fetchReducer","index","setIndex","direction","setDirection","handleSelect","selectedIndex","e","clickedProduct","id","productDetails","suggestedItems","slice","map","item","url","propTypes","func","isRequired","array","mapStateToProps","state","items","fetchReducerProductDetails"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems,getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst SlideMain = ({getItems, getProductDetails, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n        getProductDetails();\r\n    },[])\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [direction, setDirection] = useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n\r\n    const clickedProduct = (id) => {\r\n      <Route exact path={\"/\"+id} component={productDetails} />\r\n    }\r\n\r\n    const suggestedItems = fetchReducer.slice(0,8).map(item=>(\r\n        <Carousel.Item key={item.id} onClick={clickedProduct(item.id)}>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={item.url}\r\n          alt=\"First slide\"\r\n          height=\"550px\"\r\n        />\r\n        <Carousel.Caption>\r\n          <h3>Sale -70%</h3>\r\n          <Button className=\"slideMainBtn\" type=\"button\">Primary</Button>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ));\r\n    return (\r\n      <>\r\n      <div className=\"subtitleLargest\">\r\n        Suggested Products\r\n        <hr/>\r\n      </div>\r\n        <Carousel activeIndex={index} direction={direction} onSelect={handleSelect}>\r\n            {suggestedItems}\r\n        </Carousel>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\nSlideMain.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items,\r\nfetchReducerProductDetails: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems, getProductDetails})(SlideMain);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import React, {Component, useState, useEffect} from 'react';\n// import {Jumbotron,Container} from 'react-bootstrap'\n// import PropTypes from 'prop-types';\n// import {connect} from 'react-redux';\n// import {getItems} from '../../actions/fetchActions';\n// import NavMain from './navMain';\n// const SearchBarResults = ({getItems, fetchReducer }) => {\n//     useEffect (()=>{\n//         getItems();\n//     },[])\n//   return (  \n//     <div>\n//     {productResult.map(search => (\n//       <div>\n//         <div key={search.id} class=\"columns is-gapless is-centered\">\n//           <div class=\"column is-2 filteredColumn\">{search.title}</div>\n//           <div class=\"column is-2 filteredColumn\">{search.id}</div>\n//         </div>\n//         <hr></hr>\n//       </div>\n//     ))}\n//   </div>\n//   );\n// }\n// SearchBarResults.propTypes = {\n//     getItems: PropTypes.func.isRequired,\n//     fetchReducer: PropTypes.array.isRequired\n// }\n// const mapStateToProps = state => ({\n// fetchReducer: state.fetchReducer.items\n// });\n// export default connect (mapStateToProps,{getItems})(SearchBarResults);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/navbar/searchBarResults.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, {Component, useState, useEffect} from 'react';\r\n// import {Jumbotron,Container} from 'react-bootstrap'\r\n// import PropTypes from 'prop-types';\r\n// import {connect} from 'react-redux';\r\n// import {getItems} from '../../actions/fetchActions';\r\n\r\n// import NavMain from './navMain';\r\n\r\n\r\n\r\n\r\n// const SearchBarResults = ({getItems, fetchReducer }) => {\r\n\r\n//     useEffect (()=>{\r\n//         getItems();\r\n//     },[])\r\n\r\n\r\n//   return (  \r\n//     <div>\r\n//     {productResult.map(search => (\r\n//       <div>\r\n//         <div key={search.id} class=\"columns is-gapless is-centered\">\r\n//           <div class=\"column is-2 filteredColumn\">{search.title}</div>\r\n//           <div class=\"column is-2 filteredColumn\">{search.id}</div>\r\n//         </div>\r\n//         <hr></hr>\r\n//       </div>\r\n//     ))}\r\n//   </div>\r\n//   );\r\n// }\r\n\r\n\r\n// SearchBarResults.propTypes = {\r\n//     getItems: PropTypes.func.isRequired,\r\n//     fetchReducer: PropTypes.array.isRequired\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n// fetchReducer: state.fetchReducer.items\r\n// });\r\n\r\n// export default connect (mapStateToProps,{getItems})(SearchBarResults);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\productDetails.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Jumbotron, Card, CardGroup, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst ProductDetails = ({\n  getProductDetails,\n  selectedProduct,\n  match\n}) => {\n  useEffect(() => {\n    var paramProduct = match.params.id;\n    getProductDetails(paramProduct);\n  }, []);\n  const getProduct = React.createElement(React.Fragment, null, React.createElement(Jumbotron, {\n    className: \"jumbotronSale\",\n    key: selectedProduct.id,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: selectedProduct.url,\n    alt: \"image\",\n    width: \"100%\",\n    height: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(CardGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"hi\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, selectedProduct.title)), React.createElement(\"div\", {\n    className: \"cardProduct col-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: \"24rem\",\n      height: \"10rem\"\n    },\n    key: selectedProduct.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Outlander - cast away\"), React.createElement(Button, {\n    variant: \"primary\",\n    className: \" lead float-right mr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Go somewhere\")))))));\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, getProduct));\n};\n\nProductDetails.propTypes = {\n  getProductDetails: PropTypes.func.isRequired,\n  selectedProduct: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  selectedProduct: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getProductDetails\n})(ProductDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/productDetails.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Jumbotron","Card","CardGroup","Row","Col","PropTypes","connect","getProductDetails","Route","Switch","Link","ProductDetails","selectedProduct","match","paramProduct","params","id","getProduct","url","title","width","height","propTypes","func","isRequired","object","mapStateToProps","state","fetchReducer","productDetails"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Jumbotron,Card, CardGroup, Row, Col} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProductDetails = ({getProductDetails, selectedProduct,match}) => {\r\n\r\n    useEffect (()=>{\r\n      var paramProduct = match.params.id\r\n        getProductDetails(paramProduct);\r\n    },[])\r\n\r\n   \r\n\r\n    const getProduct = (\r\n      <>\r\n        {/* Jumbotron */}\r\n        <Jumbotron className=\"jumbotronSale\" key={selectedProduct.id} fluid>\r\n          <img\r\n            src={selectedProduct.url}\r\n            alt=\"image\"\r\n            width=\"100%\"\r\n            height=\"400px\"\r\n          />\r\n        </Jumbotron>\r\n        {/* Product title + Card Price with Basket */}\r\n        <CardGroup>\r\n          <Row className=\"col-12\">\r\n            {/* Title */}\r\n            <div className=\"col-4\">\r\n              <hi>{selectedProduct.title}</hi>\r\n            </div>\r\n            {/* Price Card */}\r\n            <div className=\"cardProduct col-4\">\r\n            <Card\r\n              style={{ width: \"24rem\", height: \"10rem\" }}\r\n              key={selectedProduct.id}\r\n            >\r\n              <Card.Body>\r\n                <Card.Title>Outlander - cast away</Card.Title>\r\n                <Button variant=\"primary\" className=\" lead float-right mr-3\">\r\n                  Go somewhere\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n            </div>\r\n          </Row>\r\n        </CardGroup>\r\n      </>\r\n    );\r\n  \r\n    return (\r\n      <>\r\n      <div>\r\n        {getProduct}\r\n      </div>\r\n      \r\n     \r\n        </>\r\n      );\r\n}\r\n\r\n\r\nProductDetails.propTypes = {\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    selectedProduct: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nselectedProduct: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getProductDetails})(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}
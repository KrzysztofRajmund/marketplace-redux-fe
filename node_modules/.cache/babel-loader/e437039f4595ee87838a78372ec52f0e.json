{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\productDetails.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Jumbotron, Card, CardGroup, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst ProductDetails = ({\n  getProductDetails,\n  selectedProduct,\n  match\n}) => {\n  useEffect(() => {\n    var paramProduct = match.params.id;\n    getProductDetails(paramProduct);\n  }, []);\n  const getProduct = React.createElement(Jumbotron, {\n    className: \"jumbotronSale\",\n    key: selectedProduct.id,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: selectedProduct.url,\n    alt: \"image\",\n    width: \"100%\",\n    height: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, getProduct));\n};\n\nProductDetails.propTypes = {\n  getProductDetails: PropTypes.func.isRequired,\n  selectedProduct: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  selectedProduct: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getProductDetails\n})(ProductDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/productDetails.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Jumbotron","Card","CardGroup","Row","Col","PropTypes","connect","getProductDetails","Route","Switch","Link","ProductDetails","selectedProduct","match","paramProduct","params","id","getProduct","url","propTypes","func","isRequired","object","mapStateToProps","state","fetchReducer","productDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA6CC,IAA7C,EAAmDC,SAAnD,EAA8DC,GAA9D,EAAmEC,GAAnE,QAA6E,iBAA7E;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,4BAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,IAAvB,QAAmC,kBAAnC;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAACJ,EAAAA,iBAAD;AAAoBK,EAAAA,eAApB;AAAoCC,EAAAA;AAApC,CAAD,KAAgD;AAEnEjB,EAAAA,SAAS,CAAE,MAAI;AACb,QAAIkB,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAhC;AACET,IAAAA,iBAAiB,CAACO,YAAD,CAAjB;AACH,GAHQ,EAGP,EAHO,CAAT;AAMA,QAAMG,UAAU,GACV,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAqC,IAAA,GAAG,EAAEL,eAAe,CAACI,EAA1D;AAA8D,IAAA,KAAK,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,GAAG,EAAEJ,eAAe,CAACM,GAA1B;AAA+B,IAAA,GAAG,EAAC,OAAnC;AAA2C,IAAA,KAAK,EAAC,MAAjD;AAAwD,IAAA,MAAM,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADN;AASA,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UADH,CADA,CADF;AASH,CA1BD;;AA6BAN,cAAc,CAACQ,SAAf,GAA2B;AACvBZ,EAAAA,iBAAiB,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADX;AAEvBT,EAAAA,eAAe,EAAEP,SAAS,CAACiB,MAAV,CAAiBD;AAFX,CAA3B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCZ,EAAAA,eAAe,EAAEY,KAAK,CAACC,YAAN,CAAmBC;AADF,CAAL,CAA7B;;AAIA,eAAepB,OAAO,CAAEiB,eAAF,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAA8CI,cAA9C,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Jumbotron,Card, CardGroup, Row, Col} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProductDetails = ({getProductDetails, selectedProduct,match}) => {\r\n\r\n    useEffect (()=>{\r\n      var paramProduct = match.params.id\r\n        getProductDetails(paramProduct);\r\n    },[])\r\n\r\n\r\n    const getProduct = (\r\n          <Jumbotron className=\"jumbotronSale\" key={selectedProduct.id} fluid> \r\n               <img src={selectedProduct.url} alt=\"image\" width=\"100%\" height=\"400px\"/>\r\n          </Jumbotron>\r\n      );\r\n      \r\n\r\n\r\n  \r\n    return (\r\n      <>\r\n      <div>\r\n        {getProduct}\r\n      </div>\r\n      \r\n     \r\n        </>\r\n      );\r\n}\r\n\r\n\r\nProductDetails.propTypes = {\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    selectedProduct: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nselectedProduct: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getProductDetails})(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}
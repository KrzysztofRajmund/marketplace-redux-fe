{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\slideMain.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions';\n\nconst SlideMain = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        direction = _useState4[0],\n        setDirection = _useState4[1];\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    setDirection(e.direction);\n  };\n\n  const suggestedItems = fetchReducer.slice(0, 9).map(item => // <Jumbotron className=\"jumbotronSale\" key={item.id} fluid> \n  //      <img src={item.url} alt=\"image\" width=\"100%\" height=\"300px\"/>\n  // </Jumbotron>\n  React.createElement(Carousel.Item, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: item.url,\n    alt: \"First slide\",\n    width: \"80%\",\n    height: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Carousel.Caption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"First slide label\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Nulla vitae elit libero, a pharetra augue mollis interdum.\"))));\n  return React.createElement(Carousel, {\n    activeIndex: index,\n    direction: direction,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, suggestedItems);\n};\n\nSlideMain.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(SlideMain);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/slideMain.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","PropTypes","connect","getItems","SlideMain","fetchReducer","index","setIndex","direction","setDirection","handleSelect","selectedIndex","e","suggestedItems","slice","map","item","id","url","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,iBAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;;AAKA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA;AAAX,CAAD,KAA+B;AAE7CP,EAAAA,SAAS,CAAE,MAAI;AACXK,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;;AAF6C,oBAMnBN,QAAQ,CAAC,CAAD,CANW;AAAA;AAAA,QAMtCS,KANsC;AAAA,QAM/BC,QAN+B;;AAAA,qBAOXV,QAAQ,CAAC,IAAD,CAPG;AAAA;AAAA,QAOtCW,SAPsC;AAAA,QAO3BC,YAP2B;;AAS7C,QAAMC,YAAY,GAAG,CAACC,aAAD,EAAgBC,CAAhB,KAAsB;AACzCL,IAAAA,QAAQ,CAACI,aAAD,CAAR;AACAF,IAAAA,YAAY,CAACG,CAAC,CAACJ,SAAH,CAAZ;AACD,GAHD;;AAIA,QAAMK,cAAc,GAAGR,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,IAAI,IACnD;AACA;AACA;AACA,sBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,GAAG,EAAED,IAAI,CAACE,GAFZ;AAGE,IAAA,GAAG,EAAC,aAHN;AAIE,IAAA,KAAK,EAAC,KAJR;AAKE,IAAA,MAAM,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQA,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,CARA,CAJmB,CAAvB;AAkBA,SACI,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEZ,KAAvB;AAA8B,IAAA,SAAS,EAAEE,SAAzC;AAAoD,IAAA,QAAQ,EAAEE,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,cADL,CADJ;AAKH,CApCD;;AAuCAT,SAAS,CAACe,SAAV,GAAsB;AAClBhB,EAAAA,QAAQ,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADP;AAElBhB,EAAAA,YAAY,EAAEJ,SAAS,CAACqB,KAAV,CAAgBD;AAFZ,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCnB,EAAAA,YAAY,EAAEmB,KAAK,CAACnB,YAAN,CAAmBoB;AADC,CAAL,CAA7B;;AAIA,eAAevB,OAAO,CAAEqB,eAAF,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,SAArC,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n\r\n\r\n\r\n\r\nconst SlideMain = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [direction, setDirection] = useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n    const suggestedItems = fetchReducer.slice(0,9).map(item=>(\r\n        // <Jumbotron className=\"jumbotronSale\" key={item.id} fluid> \r\n        //      <img src={item.url} alt=\"image\" width=\"100%\" height=\"300px\"/>\r\n        // </Jumbotron>\r\n        <Carousel.Item key={item.id}>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={item.url}\r\n          alt=\"First slide\"\r\n          width=\"80%\" \r\n          height=\"400px\"\r\n        />\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ));\r\n    return (\r\n        <Carousel activeIndex={index} direction={direction} onSelect={handleSelect}>\r\n            {suggestedItems}\r\n        </Carousel>\r\n      );\r\n}\r\n\r\n\r\nSlideMain.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(SlideMain);\r\n"]},"metadata":{},"sourceType":"module"}
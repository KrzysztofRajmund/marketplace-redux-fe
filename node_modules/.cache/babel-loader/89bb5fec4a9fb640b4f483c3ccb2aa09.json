{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\chosenForYou.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Card, CardGroup } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions';\n\nconst ChosenForYou = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        direction = _useState4[0],\n        setDirection = _useState4[1];\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    setDirection(e.direction);\n  };\n\n  const itemsForYou = fetchReducer.slice(0, 3).map(item => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.jumbotronUrl,\n    height: \"400px\",\n    width: \"250px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n  const itemsForYouTwo = fetchReducer.slice(3, 7).map(item => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.jumbotronUrl,\n    height: \"400px\",\n    width: \"250px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    activeIndex: index,\n    direction: direction,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, itemsForYou), React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, itemsForYouTwo)));\n};\n\nChosenForYou.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ChosenForYou);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/chosenForYou.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Card","CardGroup","PropTypes","connect","getItems","ChosenForYou","fetchReducer","index","setIndex","direction","setDirection","handleSelect","selectedIndex","e","itemsForYou","slice","map","item","jumbotronUrl","itemsForYouTwo","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,SAAzC,QAAyD,iBAAzD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA;AAAX,CAAD,KAA+B;AAEhDV,EAAAA,SAAS,CAAE,MAAI;AACXQ,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;;AAFgD,oBAMtBT,QAAQ,CAAC,CAAD,CANc;AAAA;AAAA,QAMzCY,KANyC;AAAA,QAMlCC,QANkC;;AAAA,qBAOdb,QAAQ,CAAC,IAAD,CAPM;AAAA;AAAA,QAOzCc,SAPyC;AAAA,QAO9BC,YAP8B;;AAShD,QAAMC,YAAY,GAAG,CAACC,aAAD,EAAgBC,CAAhB,KAAsB;AACzCL,IAAAA,QAAQ,CAACI,aAAD,CAAR;AACAF,IAAAA,YAAY,CAACG,CAAC,CAACJ,SAAH,CAAZ;AACD,GAHD;;AAIA,QAAMK,WAAW,GAAGR,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,IAAI,IAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,YADV;AAEA,IAAA,MAAM,EAAC,OAFP;AAGA,IAAA,KAAK,EAAC,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADgB,CAApB;AAUA,QAAMC,cAAc,GAAGb,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,IAAI,IACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,YADV;AAEA,IAAA,MAAM,EAAC,OAFP;AAGA,IAAA,KAAK,EAAC,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADqB,CAAvB;AASA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEX,KAAvB;AAA8B,IAAA,SAAS,EAAEE,SAAzC;AAAoD,IAAA,QAAQ,EAAEE,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCG,WADD,CADF,EAIE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCK,cADD,CAJF,CALF,CADF;AAgBH,CAhDD;;AAmDAd,YAAY,CAACe,SAAb,GAAyB;AACrBhB,EAAAA,QAAQ,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADJ;AAErBhB,EAAAA,YAAY,EAAEJ,SAAS,CAACqB,KAAV,CAAgBD;AAFT,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCnB,EAAAA,YAAY,EAAEmB,KAAK,CAACnB,YAAN,CAAmBoB;AADC,CAAL,CAA7B;;AAIA,eAAevB,OAAO,CAAEqB,eAAF,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,YAArC,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Card, CardGroup} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n\r\n\r\n\r\n\r\nconst ChosenForYou = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [direction, setDirection] = useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n    const itemsForYou = fetchReducer.slice(0,3).map(item=>(\r\n        <div>\r\n          <img\r\n          src={item.jumbotronUrl}\r\n          height=\"400px\" \r\n          width=\"250px\"\r\n          ></img>\r\n        </div>\r\n    ));\r\n\r\n    const itemsForYouTwo = fetchReducer.slice(3,7).map(item=>(\r\n      <div>\r\n        <img\r\n        src={item.jumbotronUrl}\r\n        height=\"400px\" \r\n        width=\"250px\"\r\n        ></img>\r\n      </div>\r\n  ));\r\n    return (\r\n      <Container>\r\n      {/* <div className=\"subtitleLargest\">\r\n      <hr/>\r\n        Chosen For You\r\n      </div> */}\r\n        <Carousel activeIndex={index} direction={direction} onSelect={handleSelect}>\r\n          <Carousel.Item>\r\n          {itemsForYou}\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n          {itemsForYouTwo}\r\n          </Carousel.Item>\r\n        </Carousel>\r\n        </Container>\r\n      );\r\n}\r\n\r\n\r\nChosenForYou.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(ChosenForYou);\r\n"]},"metadata":{},"sourceType":"module"}
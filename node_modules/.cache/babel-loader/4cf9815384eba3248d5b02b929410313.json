{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\productDetails.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Jumbotron } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems, getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst ProductDetails = ({\n  getProductDetails,\n  fetchReducer,\n  match\n}) => {\n  useEffect(() => {\n    var paramProduct = match.params.id;\n    getProductDetails(paramProduct);\n    console.log(paramProduct, \"props\");\n  }, []); // const getProduct = async (paramProduct) => {\n  //   console.log(paramProduct, \"paramProduct\")\n  //   if (fetchReducer.id === paramProduct) {\n  //     fetchReducer.map(product=>(\n  //       <Jumbotron className=\"jumbotronSale\" key={product.id} fluid> \n  //            <img src={product.url} alt=\"image\" width=\"100%\" height=\"400px\"/>\n  //       </Jumbotron>\n  //   ));\n  //   }\n  // }\n\n  return React.createElement(React.Fragment, null, \"ID: \", match.params.id, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"PRODUCT:\"));\n}; // ProductDetails.propTypes = {\n//     getProductDetails: PropTypes.func.isRequired,\n//     fetchReducer: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getProductDetails\n})(ProductDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/productDetails.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Jumbotron","PropTypes","connect","getItems","getProductDetails","Route","Switch","Link","ProductDetails","fetchReducer","match","paramProduct","params","id","console","log","mapStateToProps","state","productDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAmD,iBAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAiBC,iBAAjB,QAAyC,4BAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,IAAvB,QAAmC,kBAAnC;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAACJ,EAAAA,iBAAD;AAAoBK,EAAAA,YAApB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AAEhEd,EAAAA,SAAS,CAAE,MAAI;AACb,QAAIe,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAhC;AACET,IAAAA,iBAAiB,CAACO,YAAD,CAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAAyB,OAAzB;AACH,GAJQ,EAIP,EAJO,CAAT,CAFgE,CAShE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,SACE,kDACKD,KAAK,CAACE,MAAN,CAAaC,EADlB,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CADF;AAUH,CAnCD,C,CAsCA;AACA;AACA;AACA;;;AAEA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAClCR,EAAAA,YAAY,EAAEQ,KAAK,CAACR,YAAN,CAAmBS;AADC,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CAAEc,eAAF,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAA8CI,cAA9C,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Jumbotron} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems,getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProductDetails = ({getProductDetails, fetchReducer,match}) => {\r\n\r\n    useEffect (()=>{\r\n      var paramProduct = match.params.id\r\n        getProductDetails(paramProduct);\r\n        console.log(paramProduct,\"props\")\r\n    },[])\r\n\r\n\r\n    // const getProduct = async (paramProduct) => {\r\n    //   console.log(paramProduct, \"paramProduct\")\r\n    //   if (fetchReducer.id === paramProduct) {\r\n    //     fetchReducer.map(product=>(\r\n    //       <Jumbotron className=\"jumbotronSale\" key={product.id} fluid> \r\n    //            <img src={product.url} alt=\"image\" width=\"100%\" height=\"400px\"/>\r\n    //       </Jumbotron>\r\n    //   ));\r\n    //   }\r\n    // }\r\n    \r\n   \r\n\r\n    \r\n\r\n  \r\n    return (\r\n      <>\r\n      ID: {match.params.id}\r\n      <div>PRODUCT:\r\n        {/* {getProduct} */}\r\n        </div>\r\n      \r\n     \r\n        </>\r\n      );\r\n}\r\n\r\n\r\n// ProductDetails.propTypes = {\r\n//     getProductDetails: PropTypes.func.isRequired,\r\n//     fetchReducer: PropTypes.object.isRequired\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getProductDetails})(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\jumbotronSale.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions';\n\nconst JumbotronSale = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []);\n  const winterSaleItem = fetchReducer.slice(0, 1).map(item => React.createElement(Jumbotron, {\n    key: item.id,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.url,\n    alt: \"image\",\n    width: \"100%\",\n    height: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n  return {\n    winterSaleItem\n  };\n};\n\nJumbotronSale.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(JumbotronSale);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/jumbotronSale.jsx"],"names":["React","Component","useState","useEffect","Jumbotron","Container","PropTypes","connect","getItems","JumbotronSale","fetchReducer","winterSaleItem","slice","map","item","id","url","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,SAAlB,QAAkC,iBAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA;AAAX,CAAD,KAA+B;AAEjDP,EAAAA,SAAS,CAAE,MAAI;AACXK,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;AAKA,QAAMG,cAAc,GAAGD,YAAY,CAACE,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,IAAI,IACnD,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,IAAA,KAAK,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAA6C,IAAA,MAAM,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADL,CADmB,CAAvB;AAOF,SAEE;AAACL,IAAAA;AAAD,GAFF;AAKD,CAnBD;;AAsBAF,aAAa,CAACQ,SAAd,GAA0B;AACtBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADH;AAEtBT,EAAAA,YAAY,EAAEJ,SAAS,CAACc,KAAV,CAAgBD;AAFR,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCZ,EAAAA,YAAY,EAAEY,KAAK,CAACZ,YAAN,CAAmBa;AADC,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CAAEc,eAAF,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,aAArC,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Jumbotron,Container} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n\r\n\r\n\r\n\r\nconst JumbotronSale = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n\r\n    const winterSaleItem = fetchReducer.slice(0,1).map(item=>(\r\n        <Jumbotron key={item.id} fluid>\r\n             <Container>\r\n             <img src={item.url} alt=\"image\" width=\"100%\" height=\"200px\"/>\r\n             </Container>\r\n        </Jumbotron>\r\n    ));\r\n  return (  \r\n\r\n    {winterSaleItem}\r\n \r\n  );\r\n}\r\n\r\n\r\nJumbotronSale.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(JumbotronSale);\r\n"]},"metadata":{},"sourceType":"module"}
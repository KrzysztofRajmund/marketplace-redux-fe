{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\chosenForYou.jsx\";\nimport React, { Component, useState, useEffect } from 'react'; //react-boottrap\n\nimport { Container, Carousel, Button, Card, CardGroup, Row } from 'react-bootstrap'; //redux\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions'; //assets\n\nimport basketiconTwo from \"./navbar/assets/basketiconTwo.png\";\n\nconst ChosenForYou = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        direction = _useState4[0],\n        setDirection = _useState4[1];\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    setDirection(e.direction);\n  };\n\n  const itemsForYou = fetchReducer.slice(0, 2).map(item => React.createElement(Row, {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: item.id,\n    className: \"chosenForYouRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: item.jumbotronUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, item.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"$\", item.price))), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: basketiconTwo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))))));\n  const itemsForYouTwo = fetchReducer.slice(2, 4).map(item => React.createElement(Row, {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: item.id,\n    className: \"chosenForYouRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: item.jumbotronUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, item.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"$\", item.price))), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Buy\")))));\n  return React.createElement(Container, {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"subtitleLargest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"Chosen For You\"), React.createElement(Carousel, {\n    className: \"chosenForYouCarousel\",\n    activeIndex: index,\n    direction: direction,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, itemsForYou, itemsForYouTwo)), React.createElement(Carousel.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, itemsForYou, itemsForYouTwo))));\n};\n\nChosenForYou.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ChosenForYou);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/chosenForYou.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Card","CardGroup","Row","PropTypes","connect","getItems","basketiconTwo","ChosenForYou","fetchReducer","index","setIndex","direction","setDirection","handleSelect","selectedIndex","e","itemsForYou","slice","map","item","id","jumbotronUrl","title","price","itemsForYouTwo","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\n//react-boottrap\r\nimport {Container,Carousel,Button, Card, CardGroup, Row} from 'react-bootstrap'\r\n//redux\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n//assets\r\nimport basketiconTwo from \"./navbar/assets/basketiconTwo.png\";\r\n\r\n\r\n\r\n\r\nconst ChosenForYou = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [direction, setDirection] = useState(null);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n      setDirection(e.direction);\r\n    };\r\n    const itemsForYou = fetchReducer.slice(0,2).map(item=>(\r\n      <Row className=\"col-6\">\r\n      <Card key={item.id} className=\"chosenForYouRow\">\r\n        <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\r\n        <Card.Body>\r\n    <Card.Title><div>{item.title}</div><p>${item.price}</p></Card.Title>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button><img src={basketiconTwo}></img></Button>\r\n        </Card.Footer>\r\n      </Card>\r\n      </Row>\r\n    ));\r\n    const itemsForYouTwo = fetchReducer.slice(2,4).map(item=>(\r\n      <Row className=\"col-6\">\r\n      <Card key={item.id} className=\"chosenForYouRow\">\r\n        <Card.Img variant=\"top\"src={item.jumbotronUrl}/>\r\n        <Card.Body>\r\n    <Card.Title><div>{item.title}</div><p>${item.price}</p></Card.Title>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button>Buy</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n      </Row>\r\n    ));\r\n    return (\r\n      <Container className=\"col-12\" >\r\n      <div className=\"subtitleLargest\">\r\n      <hr/>\r\n        Chosen For You\r\n      </div>\r\n        <Carousel className=\"chosenForYouCarousel\" activeIndex={index} direction={direction} onSelect={handleSelect}>\r\n          <Carousel.Item>\r\n            <CardGroup>\r\n          {itemsForYou}\r\n          {itemsForYouTwo}\r\n          </CardGroup>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <CardGroup>\r\n          {itemsForYou}\r\n          {itemsForYouTwo}\r\n          </CardGroup>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n        </Container>\r\n      );\r\n}\r\n\r\n\r\nChosenForYou.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(ChosenForYou);\r\n"]},"metadata":{},"sourceType":"module"}
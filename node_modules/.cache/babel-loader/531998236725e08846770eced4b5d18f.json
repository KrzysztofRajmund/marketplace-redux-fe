{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\jumbotronSale.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions';\n\nconst JumbotronSale = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []);\n  const listOfItems = fetchReducer.slice(0, 1).map(item => React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.url,\n    alt: \"image\",\n    width: \"100%\",\n    height: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Jumbotron Sale:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"how is going\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"how is going\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"how is going\"), listOfItems);\n};\n\nJumbotronSale.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(JumbotronSale);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/jumbotronSale.jsx"],"names":["React","Component","useState","useEffect","PropTypes","connect","getItems","JumbotronSale","fetchReducer","listOfItems","slice","map","item","id","url","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA;AAAX,CAAD,KAA+B;AAEjDL,EAAAA,SAAS,CAAE,MAAI;AACXG,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;AAKA,QAAMG,WAAW,GAAGD,YAAY,CAACE,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4BC,IAAI,IAChD;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAA6C,IAAA,MAAM,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADgB,CAApB;AAKF,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJG,EAKFL,WALE,CADD;AASD,CArBD;;AAwBAF,aAAa,CAACQ,SAAd,GAA0B;AACtBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADH;AAEtBT,EAAAA,YAAY,EAAEJ,SAAS,CAACc,KAAV,CAAgBD;AAFR,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCZ,EAAAA,YAAY,EAAEY,KAAK,CAACZ,YAAN,CAAmBa;AADC,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CAAEc,eAAF,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,aAArC,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n\r\n\r\n\r\n\r\nconst JumbotronSale = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n\r\n    const listOfItems = fetchReducer.slice(0,1).map(item=>(\r\n        <div key={item.id}>\r\n            <img src={item.url} alt=\"image\" width=\"100%\" height=\"200px\"/>\r\n        </div>\r\n    ));\r\n  return (  \r\n   <div>\r\n<h3>Jumbotron Sale:</h3>\r\n<div>how is going</div>\r\n<div>how is going</div>\r\n<div>how is going</div>\r\n{listOfItems}\r\n   </div>\r\n  );\r\n}\r\n\r\n\r\nJumbotronSale.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(JumbotronSale);\r\n"]},"metadata":{},"sourceType":"module"}
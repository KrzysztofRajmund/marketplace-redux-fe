{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\homePage\\\\jumbotronSale.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/fetchActions';\n\nconst JumbotronSale = ({\n  getItems,\n  fetchReducer\n}) => {\n  useEffect(() => {\n    getItems();\n  }, []); // const listOfItems = fetchReducer.slice(0,1).map(item=>(\n  //     <div key={item.id}>\n  //         <img src={item.url} alt=\"image\" width=\"100%\" height=\"200px\"/>\n  //     </div>\n  // ));\n\n  return React.createElement(Jumbotron, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Fluid jumbotron\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"This is a modified jumbotron that occupies the entire horizontal space of its parent.\")));\n};\n\nJumbotronSale.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducer: state.fetchReducer.items\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(JumbotronSale);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/homePage/jumbotronSale.jsx"],"names":["React","Component","useState","useEffect","Jumbotron","PropTypes","connect","getItems","JumbotronSale","fetchReducer","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA;AAAX,CAAD,KAA+B;AAEjDN,EAAAA,SAAS,CAAE,MAAI;AACXI,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT,CAFiD,CAOjD;AACA;AACA;AACA;AACA;;AACF,SACF,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAFF,CADF,CADE;AAWD,CAvBD;;AA0BAC,aAAa,CAACE,SAAd,GAA0B;AACtBH,EAAAA,QAAQ,EAAEF,SAAS,CAACM,IAAV,CAAeC,UADH;AAEtBH,EAAAA,YAAY,EAAEJ,SAAS,CAACQ,KAAV,CAAgBD;AAFR,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCN,EAAAA,YAAY,EAAEM,KAAK,CAACN,YAAN,CAAmBO;AADC,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAAEQ,eAAF,EAAkB;AAACP,EAAAA;AAAD,CAAlB,CAAP,CAAqCC,aAArC,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../../actions/fetchActions';\r\n\r\n\r\n\r\n\r\nconst JumbotronSale = ({getItems, fetchReducer }) => {\r\n\r\n    useEffect (()=>{\r\n        getItems();\r\n    },[])\r\n\r\n\r\n    // const listOfItems = fetchReducer.slice(0,1).map(item=>(\r\n    //     <div key={item.id}>\r\n    //         <img src={item.url} alt=\"image\" width=\"100%\" height=\"200px\"/>\r\n    //     </div>\r\n    // ));\r\n  return (  \r\n<Jumbotron fluid>\r\n  <Container>\r\n    <h1>Fluid jumbotron</h1>\r\n    <p>\r\n      This is a modified jumbotron that occupies the entire horizontal space of\r\n      its parent.\r\n    </p>\r\n  </Container>\r\n</Jumbotron>\r\n  );\r\n}\r\n\r\n\r\nJumbotronSale.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducer: state.fetchReducer.items\r\n});\r\n\r\nexport default connect (mapStateToProps,{getItems})(JumbotronSale);\r\n"]},"metadata":{},"sourceType":"module"}
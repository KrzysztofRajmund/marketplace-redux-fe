{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Programowanie\\\\MARKETPLACE-REDUX-HOOKS-CLASSES\\\\marketplace-redux-fe\\\\src\\\\components\\\\productsPage\\\\productDetails.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Carousel, Button, Jumbotron } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems, getProductDetails } from '../../actions/fetchActions';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst ProductDetails = ({\n  getProductDetails,\n  fetchReducer,\n  id\n}) => {\n  useEffect(() => {\n    getProductDetails(id);\n  }, []);\n  useEffect(() => {\n    console.log(match.params.item.id, \"props\");\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Jumbotron, {\n    className: \"jumbotronSale\" // key={item.id} \n    ,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    //  src={item.url} \n    alt: \"image\",\n    width: \"100%\",\n    height: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nProductDetails.propTypes = {\n  getProductDetails: PropTypes.func.isRequired,\n  fetchReducer: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  fetchReducerProductDetails: state.fetchReducer.productDetails\n});\n\nexport default connect(mapStateToProps, {\n  getProductDetails\n})(ProductDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Programowanie/MARKETPLACE-REDUX-HOOKS-CLASSES/marketplace-redux-fe/src/components/productsPage/productDetails.jsx"],"names":["React","Component","useState","useEffect","Container","Carousel","Button","Jumbotron","PropTypes","connect","getItems","getProductDetails","Route","Switch","Link","ProductDetails","fetchReducer","id","console","log","match","params","item","propTypes","func","isRequired","array","mapStateToProps","state","fetchReducerProductDetails","productDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAmD,iBAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAiBC,iBAAjB,QAAyC,4BAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,IAAvB,QAAmC,kBAAnC;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAACJ,EAAAA,iBAAD;AAAoBK,EAAAA,YAApB;AAAkCC,EAAAA;AAAlC,CAAD,KAA2C;AAE9Dd,EAAAA,SAAS,CAAE,MAAI;AAEXQ,IAAAA,iBAAiB,CAACM,EAAD,CAAjB;AACH,GAHQ,EAGP,EAHO,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBL,EAA9B,EAAiC,OAAjC;AACD,GAFQ,EAEP,EAFO,CAAT;AAOA,SACE,0CACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB,CACA;AADA;AAEA,IAAA,KAAK,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGO;AACD;AACC,IAAA,GAAG,EAAC,OAFJ;AAEY,IAAA,KAAK,EAAC,MAFlB;AAEyB,IAAA,MAAM,EAAC,OAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHP,CADA,CADF;AAWH,CA1BD;;AA6BAF,cAAc,CAACQ,SAAf,GAA2B;AACvBZ,EAAAA,iBAAiB,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADX;AAEvBT,EAAAA,YAAY,EAAER,SAAS,CAACkB,KAAV,CAAgBD;AAFP,CAA3B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCC,EAAAA,0BAA0B,EAAED,KAAK,CAACZ,YAAN,CAAmBc;AADb,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CAAEkB,eAAF,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAA8CI,cAA9C,CAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Container,Carousel,Button, Jumbotron} from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getItems,getProductDetails} from '../../actions/fetchActions';\r\nimport { Route, Switch,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ProductDetails = ({getProductDetails, fetchReducer, id}) => {\r\n\r\n    useEffect (()=>{\r\n      \r\n        getProductDetails(id);\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n      console.log(match.params.item.id,\"props\")\r\n    },[])\r\n\r\n    \r\n\r\n  \r\n    return (\r\n      <>\r\n      <Jumbotron className=\"jumbotronSale\" \r\n      // key={item.id} \r\n      fluid> \r\n             <img \r\n            //  src={item.url} \r\n             alt=\"image\" width=\"100%\" height=\"400px\"/>\r\n        </Jumbotron>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\nProductDetails.propTypes = {\r\n    getProductDetails: PropTypes.func.isRequired,\r\n    fetchReducer: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\nfetchReducerProductDetails: state.fetchReducer.productDetails\r\n});\r\n\r\nexport default connect (mapStateToProps,{getProductDetails})(ProductDetails);\r\n"]},"metadata":{},"sourceType":"module"}